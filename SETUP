Super concise list of requirements:
  - An x86_64 family CPU, SandyBridge or later.
  - Linux kernel no later than mid 2017.  I have been using 4.10.  But I do not
    see why 3.10 should not work.
  - The llvm-clang (5.0.0 or later, the version is hard coded into CROSSTOOL)
    toolchain properly installed.  Earlier versions may work.
  - Bazel 0.6.0 or later.  There might be some breaking changes in the future.
    But it should be easy to fix.

Things that SHOULD NOT matter:
  - Which shell is in use, i.e., bash, dash, zsh, fish, etc..
  - Environment variables.

The goal is to guarantee bit-reproducibility by clearly specifying all
dependencies within Bazel.

All the above said, the development was done on a Ubuntu 16.04 machine running
Intel i7 3770K with 32G DRAM and 2x1TB SSDs.

Here is a little script you can use to create the same build environment as the
one I had:

    wget https://github.com/bazelbuild/bazel/releases/download/0.9.0/bazel-0.9.0-installer-linux-x86_64.sh --output-document bazel-installer.sh
    sudo sh bazel-installer.sh
    wget http://releases.llvm.org/6.0.0/clang+llvm-6.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz --output-document clang-6.0.0.tar.xz
    tar xfJ clang-6.0.0.tar.xz
    sudo mv clang+llvm-6.0.0-x86_64-linux-gnu-ubuntu-16.04 /opt/clang/6.0.0
    # At this point, please verify that /opt/clang/6.0.0/bin/clang exists.
    sudo apt install -y automake libtool

The above setup works on both Ubuntu 16.04 and Ubuntu 17.04.  We should really
upgrade to clang-6.0.0 once it is released.

You may create a Dockerfile with the above commands and it SHOULD work.

External dependencies:
    [required] automake libtool:
        Used for generating config.h and other source files inside genrule().
    [optional] cmake:
        Used for experimenting with cmake-native projects.

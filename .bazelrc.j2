# DO NOT MODIFY THIS FILE MANUALLY.
#
# This file is generated from .bazelrc.j2 via the following command:
#        ./config
#
# If you want to modify this file, please modify .bazelrc.j2 directly and rerun
# the ./config command.

{#
There is a custom cpp toolchain defined for Linux machines that installed the
complete clang-6.0.0 package into /opt/clang/6.0.0/lib and have PATH and
LD_LIBRARY_PATH properly set.  So the __configure_build__.py file will detect
the operating system.  If it is Linux, it will include the following block to
enable that custom cpp toolchain.  If it is macOS, it will skip the following
block, which will cause cpp to use the default toolchain configured for macOS.
#}
{% if architecture == 'Darwin' %}
# On macOS, just use the default toolchain, which is already clang-based and is
# good enough.
{% elif architecture == 'Linux' %}
#                       Custom C/C++ Toolchain
#
# Using --cpu=llvm will choose the custom toolchain named 'linux_clang' in the
# tools/cpp/CROSSTOOL file.  The object files are linked against the clang
# library located at /opt/clang/6.0.0/lib.  You must add it to LD_LIBRARY_PATH
# before running the binary.
#
# If you have run the ./setup script successfully, all the above preparation
# work should have been done automatically.  The only thing you might still need
# to do is to start a new terminal to update the environment variables.
build --crosstool_top=//tools/cpp:toolchain --cpu=llvm
{% else %}
    {% raise 'architecture ' + architecture + ' is not supported' %}
{% endif %}
